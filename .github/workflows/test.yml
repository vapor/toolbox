name: test
on: { pull_request: {} }


jobs:  
  test-new:
    # Run the workflow on multiple machines
    strategy:
      fail-fast: false
      matrix:
        fluentflags:
          - --no-fluent
          - --fluent.db mysql
          - --fluent.db postgres
          - --fluent.db sqlite
          - --fluent.db mongo
        leafflags:
          - --leaf
          - --no-leaf
        os: [ubuntu-latest]
        image: ["swift:5.6-focal"]
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.image }}
    steps:
      - name: Install SQLite if needed
        if: ${{ contains(matrix.fluentflags, 'sqlite') }}
        run: apt-get -q update && apt-get -q install -y libsqlite3-dev
      - name: Check out toolbox
        uses: actions/checkout@v2
      - name: Build toolbox
        run: swift build --enable-test-discovery -c debug
      - name: Execute new project command
        run: |
          swift run \
            vapor new toolbox-test \
                --no-commit -o /tmp/toolbox-test \
                ${{ matrix.fluentflags }} ${{ matrix.leafflags }}
      - name: Test new project
        run: swift test --package-path /tmp/toolbox-test
  
  createJSON:
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.output.outputs.environments }}
    steps:
      - id: output
        run: echo "::set-output name=environments::[{\"os\":\"ubuntu-latest\", \"image\":\"swift:5.2-focal\", \"toolchain\":null},{\"os\":\"ubuntu-latest\", \"image\":\"swift:5.5-focal\", \"toolchain\":null},{\"os\":\"macos-11\", \"image\":null, \"toolchain\":\"latest\"}]"
  
  test-toolbox:
    needs: createJSON
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJSON(needs.createJSON.outputs.environments) }}
    runs-on: ${{ matrix.env.os }}
    container: ${{ matrix.env.image }}
    steps:
      - name: Select toolchain
        uses: maxim-lobanov/setup-xcode@v1.2.1
        with:
          xcode-version: ${{ matrix.env.toolchain }}
        if: ${{ matrix.env.toolchain != '' }}
      - name: Check out toolbox
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        timeout-minutes: 20
        run: swift test --enable-test-discovery --sanitize=thread
